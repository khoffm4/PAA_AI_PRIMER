n = 1000
x_1 = rnorm(n,mean =0, sd= 1)
x_2 = rnorm(n,mean =0, sd= 1)
x_3 = rnorm(n,mean=0,sd = 1)
epsilon = rnorm(n,mean = 0 ,sd=1)
beta_1 = 0.5
beta_2 = 0.9
y = x_1 * beta_1 + x_2 * beta_2 + epsilon
X = cbind(x_1, x_2,x_3)
#LASSO regression
fit <- glmnet(X, y)
library(glmnet)
n = 1000
x_1 = rnorm(n,mean =0, sd= 1)
x_2 = rnorm(n,mean =0, sd= 1)
x_3 = rnorm(n,mean=0,sd = 1)
epsilon = rnorm(n,mean = 0 ,sd=1)
beta_1 = 0.5
beta_2 = 0.9
y = x_1 * beta_1 + x_2 * beta_2 + epsilon
X = cbind(x_1, x_2,x_3)
#LASSO regression
fit <- glmnet(X, y)
#Plot the LASSO paths
plot(fit)
#LASSO path in matrix form
#Each row is the regression coefficient for each variable and each column represents a differnet point on the LASSO path. Compare with plot above to get the full picture
lass_path_mat = as.matrix(fit$beta)
#LASSO with optimal model chosen by cross validation
cv_model  = cv.glmnet(X,y)
best_lambda <- cv_model$lambda.min
best_lambda
best_model <- glmnet(X, y, alpha = 1, lambda = best_lambda)
coef(best_model)
source("~/Library/CloudStorage/Dropbox/ai_ml_ss_aut24/PAA Workshop/Exercise_1-LASSO/LASSO_example.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/ai_ml_ss_aut24/PAA Workshop/Exercise_1-LASSO/LASSO_example.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/ai_ml_ss_aut24/PAA Workshop/Exercise_1-LASSO/LASSO_example.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/ai_ml_ss_aut24/PAA Workshop/Exercise_1-LASSO/LASSO_example.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/ai_ml_ss_aut24/PAA Workshop/Exercise_1-LASSO/LASSO_example.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/ai_ml_ss_aut24/PAA Workshop/Exercise_1-LASSO/LASSO_example.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/ai_ml_ss_aut24/PAA Workshop/Exercise_1-LASSO/LASSO_example.R", echo=TRUE)
library(glmnet)
n = 1000
x_1 = rnorm(n,mean =0, sd= 1)
x_2 = rnorm(n,mean =0, sd= 1)
epsilon = rnorm(n,mean = 0 ,sd=1)
beta_1 = 2/3
beta_2 = 2/3
x_3 = beta_1 * x_1 + beta_2 * x_2 + 1/3 * epsilon
cor(c(x_1, x_2, x_3))
cor(cbind(x_1, x_2, x_3))
x_1 = rnorm(n,mean =0, sd= 1)
x_2 = rnorm(n,mean =0, sd= 1)
e = rnorm(n,mean=0,sd =1)
epsilon = rnorm(n,mean = 0 ,sd=1)
beta_1 = 2/3
beta_2 = 2/3
x_3 = beta_1 * x_1 + beta_2 * x_2 + 1/3 * e
#Solution 2:
cor(cbind(x_1, x_2, x_3))
y = x_1 * beta_1 + x_2 * beta_2 + epsilon
X = cbind(x_1, x_2,x_3)
#Solution 2:
cor(X)
library(glmnet)
n = 1000
x_1 = rnorm(n,mean =0, sd= 1)
x_2 = rnorm(n,mean =0, sd= 1)
e = rnorm(n,mean=0,sd =1)
epsilon = rnorm(n,mean = 0 ,sd=1)
beta_1 = 2/3
beta_2 = 2/3
x_3 = beta_1 * x_1 + beta_2 * x_2 + 1/3 * e
X = cbind(x_1, x_2, x_3)
#Solution 2:
cor(X)
#Solution 2:
cor(X)
y = x_1 * beta_1 + x_2 * beta_2 + epsilon
#LASSO regression
fit <- glmnet(X, y)
#Plot the LASSO paths
plot(fit)
#LASSO path in matrix form
#Each row is the regression coefficient for each variable and each column represents a differnet point on the LASSO path. Compare with plot above to get the full picture
lass_path_mat = as.matrix(fit$beta)
#LASSO with optimal model chosen by cross validation
cv_model  = cv.glmnet(X,y)
best_lambda <- cv_model$lambda.min
best_lambda
best_model <- glmnet(X, y, alpha = 0.1, lambda = best_lambda)
coef(best_model)
#LASSO regression
fit <- glmnet(X, y)
#Plot the LASSO paths
plot(fit)
#LASSO path in matrix form
#Each row is the regression coefficient for each variable and each column represents a differnet point on the LASSO path. Compare with plot above to get the full picture
lass_path_mat = as.matrix(fit$beta)
#LASSO regression
fit <- glmnet(X, y)
#Plot the LASSO paths
plot(fit)
#LASSO path in matrix form
#Each row is the regression coefficient for each variable and each column represents a differnet point on the LASSO path. Compare with plot above to get the full picture
lass_path_mat = as.matrix(fit$beta)
#LASSO regression
fit <- glmnet(X, y)
#Plot the LASSO paths
plot(fit)
#LASSO regression
fit <- glmnet(X, y)
#Plot the LASSO paths
plot(fit)
library(glmnet)
#Solution 1:
n = 1000
x_1 = rnorm(n,mean =0, sd= 1)
x_2 = rnorm(n,mean =0, sd= 1)
e = rnorm(n,mean=0,sd =1)
epsilon = rnorm(n,mean = 0 ,sd=1)
beta_1 = 2/3
beta_2 = 2/3
x_3 = beta_1 * x_1 + beta_2 * x_2 + 1/3 * e
X = cbind(x_1, x_2, x_3)
#Solution 2:
cor(X)
#Solution 3:
y = x_1 * beta_1 + x_2 * beta_2 + epsilon
#LASSO regression
fit <- glmnet(X, y)
#Plot the LASSO paths
plot(fit)
library(glmnet)
#Solution 1:
n = 1000
x_1 = rnorm(n,mean =0, sd= 1)
x_2 = rnorm(n,mean =0, sd= 1)
e = rnorm(n,mean=0,sd =1)
epsilon = rnorm(n,mean = 0 ,sd=1)
beta_1 = 2/3
beta_2 = 2/3
x_3 = beta_1 * x_1 + beta_2 * x_2 + 1/3 * e
X = cbind(x_1, x_2, x_3)
#Solution 2:
cor(X)
#Solution 3:
y = x_1 * beta_1 + x_2 * beta_2 + epsilon
#LASSO regression
fit <- glmnet(X, y)
#Plot the LASSO paths
plot(fit)
fit
#LASSO path in matrix form
#Each row is the regression coefficient for each variable and each column represents a differnet point on the LASSO path. Compare with plot above to get the full picture
lass_path_mat = as.matrix(fit$beta)
lass_path_mat
#Solution 2:
cor(X)
cor(y,X)
#LASSO path in matrix form
#Each row is the regression coefficient for each variable and each column represents a differnet point on the LASSO path. Compare with plot above to get the full picture
lass_path_mat = as.matrix(fit$beta)
#LASSO with optimal model chosen by cross validation
cv_model  = cv.glmnet(X,y)
best_lambda <- cv_model$lambda.min
best_lambda
best_model <- glmnet(X, y, alpha = 0.1, lambda = best_lambda)
coef(best_model)
#LASSO regression
fit <- glmnet(X, y)
#Plot the LASSO paths
plot(fit)
#LASSO path in matrix form
#Each row is the regression coefficient for each variable and each column represents a differnet point on the LASSO path. Compare with plot above to get the full picture
lass_path_mat = as.matrix(fit$beta)
#LASSO with optimal model chosen by cross validation
cv_model  = cv.glmnet(X,y)
best_lambda <- cv_model$lambda.min
best_lambda
best_model <- glmnet(X, y, alpha = 0.1, lambda = best_lambda)
coef(best_model)
#LASSO regression
fit <- glmnet(X, y)
#Plot the LASSO paths
plot(fit)
#LASSO path in matrix form
#Each row is the regression coefficient for each variable and each column represents a differnet point on the LASSO path. Compare with plot above to get the full picture
lass_path_mat = as.matrix(fit$beta)
lass_path_mat
